<?xml version="1.0" encoding="UTF-8"?>
<!--
  //**********************************************************************
  uxbridge.samples.newswidget.hibernate
  %%
  Copyright (C) 2012 e-Spirit AG
  %%
  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
  *********************************************************************//*
  -->

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:camel="http://camel.apache.org/schema/spring"
	xmlns:broker="http://activemq.apache.org/schema/core" xmlns:sc="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
   	   http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://camel.apache.org/schema/spring
       http://camel.apache.org/schema/spring/camel-spring.xsd
       http://activemq.apache.org/schema/core
       http://activemq.apache.org/schema/core/activemq-core.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

	<sc:annotation-config />
	<tx:annotation-driven />

	<!-- Simple camel route which send every one minute a message on the console. -->
	<camelContext id="camelContext" trace="true"
		xmlns="http://camel.apache.org/schema/spring">

		<package>com.espirit.moddev.examples.uxbridge.newswidget.entity</package>

		<route id="uxbridge-commands">
			<from uri="activemq:Consumer.A.VirtualTopic.Orders" />
			<filter>
				<xpath>//uxb_entity[contains(@destinations, 'postgres')]</xpath>
				<filter>
					<xpath>//uxb_entity[@objectType = 'news']</xpath>
					<filter>
						<xpath>//uxb_entity[@command = 'add']</xpath>
						<convertBodyTo
							type="com.espirit.moddev.examples.uxbridge.newswidget.entity.UXBEntity" />
						<bean ref="articleHandler" method="add" />
					</filter>
					<filter>
						<xpath>//uxb_entity[@command = 'delete']</xpath>
						<convertBodyTo
							type="com.espirit.moddev.examples.uxbridge.newswidget.entity.UXBEntity" />
						<bean ref="articleHandler" method="delete" />
					</filter>
					<filter>
						<xpath>//uxb_entity[@command = 'cleanup']</xpath>
						<convertBodyTo
							type="com.espirit.moddev.examples.uxbridge.newswidget.entity.UXBEntity" />
						<bean ref="articleHandler" method="cleanup" />
					</filter>
				</filter>
			</filter>
		</route>
		<route id="uxbridge-router-response">
			<from uri="activemq:topic:BUS_IN" />
			<to uri="activemq:topic:FS_IN" />
		</route>
	</camelContext>


	<bean id="articleHandler"
		class="com.espirit.moddev.examples.uxbridge.newswidget.jpa.ArticleHandler">
		<constructor-arg name="emf" ref="entityManagerFactory" />
	</bean>

	<bean id="activemq" class="org.apache.activemq.camel.component.ActiveMQComponent">
		<property name="connectionFactory">
			<bean class="org.apache.activemq.ActiveMQConnectionFactory">
				<property name="brokerURL" value="tcp://localhost:61500" />
			</bean>
		</property>
	</bean>

	<!-- <bean id="activemq" class="org.apache.activemq.camel.component.ActiveMQComponent"> -->
	<!-- <property name="transacted" value="true" /> -->
	<!-- <property name="usePooledConnection" value="true" /> -->
	<!-- <property name="transactionManager" ref="txManager" /> -->
	<!-- <property name="connectionFactory" ref="jmsConnectionFactory" /> -->
	<!-- </bean> -->

	<!-- <bean id="txManager" -->
	<!-- class="org.springframework.jms.connection.JmsTransactionManager"> -->
	<!-- <property name="connectionFactory" ref="jmsConnectionFactory" /> -->
	<!-- </bean> -->

	<bean id="pooledConnectionFactory" class="org.apache.activemq.pool.PooledConnectionFactory"
		destroy-method="stop">
		<property name="maxConnections" value="10" />
		<property name="maximumActive" value="500" />
		<property name="connectionFactory" ref="jmsConnectionFactory" />
	</bean>

	<bean id="jmsConfig" class="org.apache.camel.component.jms.JmsConfiguration">
		<property name="connectionFactory" ref="pooledConnectionFactory" />
		<property name="transacted" value="false" />
		<property name="concurrentConsumers" value="10" />
	</bean>

	<bean id="jmsConnectionFactory" class="org.apache.activemq.ActiveMQConnectionFactory">
		<property name="brokerURL"
			value="failover:(tcp://uxb-bus-pm:61616)?maxReconnectAttempts=2&amp;startupMaxReconnectAttempts=10" />
	</bean>


	<bean id="jmsPool" class="org.apache.camel.component.jms.JmsComponent">
		<property name="configuration" ref="jmsConfig" />
	</bean>


	<bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
				<property name="showSql" value="true" />
				<property name="generateDdl" value="true" />
				<property name="databasePlatform" value="org.hibernate.dialect.HSQLDialect" />
			</bean>
		</property>
		<property name="dataSource" ref="dataSource" />
	</bean>

	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close">
		<property name="driverClass" value="org.hsqldb.jdbcDriver" />
		<property name="jdbcUrl" value="jdbc:hsqldb:mem:testdb" />
		<property name="user" value="sa" />
		<property name="password" value="" />
	</bean>

	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>

</beans>
